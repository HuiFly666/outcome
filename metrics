train_times = []  # 用于保存每个epoch的训练时间
test_times = []   # 用于保存每个epoch的测试时间
metrics_history = {
    'accuracy': [],
    'precision': [],
    'recall': [],
    'f1': [],
    'roc_auc': [],
    'balanced_accuracy': []
}

for epoch in range(num_epochs):
    start_train_time = time.time()
    
    # 模型训练过程
    train_loss = train(model, train_loader, optimizer, device)
    
    train_time = time.time() - start_train_time
    train_times.append(train_time)  # 保存训练时间
    
    # 测试模型
    test_time = test(model, test_loader, device, metrics_history)
    test_times.append(test_time)  # 保存测试时间

    print(f'Epoch {epoch+1}/{num_epochs}, Train Time: {train_time:.2f}s, Test Time: {test_time:.2f}s')
